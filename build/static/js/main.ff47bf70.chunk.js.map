{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/contacts.js","components/Notification.js","App.js","index.js"],"names":["Filter","newFilter","handleChangeFilter","value","onChange","type","PersonForm","props","addPerson","newName","handleChangeName","handleChangePhoneNumber","newPhoneNumber","onSubmit","Person","person","removeContact","name","phoneNumber","onClick","Persons","persons","filter","toLowerCase","includes","trim","map","baseUrl","contacts","getAll","axios","get","then","res","data","create","newObject","post","remove","id","delete","update","put","Notification","message","className","App","useState","setPersons","setNewFilter","setNewName","setNewPhoneNumber","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","e","target","preventDefault","newContact","foundCopy","find","window","confirm","returnedContact","concat","setTimeout","catch","err","response","error","console","log","contact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff47bf70.chunk.js","sourcesContent":["const Filter = ({ newFilter, handleChangeFilter }) => (\r\n  <p>\r\n    filter shown with{' '}\r\n    <input value={newFilter} onChange={handleChangeFilter} type=\"text\" />\r\n  </p>\r\n);\r\n\r\nexport default Filter;\r\n","function PersonForm(props) {\r\n  const {\r\n    addPerson,\r\n    newName,\r\n    handleChangeName,\r\n    handleChangePhoneNumber,\r\n    newPhoneNumber,\r\n  } = props;\r\n  \r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleChangeName} />\r\n      </div>\r\n      <div>\r\n        number:{' '}\r\n        <input\r\n          type=\"tel\"\r\n          value={newPhoneNumber}\r\n          onChange={handleChangePhoneNumber}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default PersonForm;\r\n","const Person = ({ person, removeContact }) => (\r\n  <p>\r\n    {person.name} {person.phoneNumber}\r\n    <button onClick={removeContact}>Remove</button>\r\n  </p>\r\n);\r\n\r\nexport default Person;\r\n","import Person from './Person';\r\n\r\nconst Persons = ({ persons, newFilter, removeContact }) => {\r\n  const filteredPersons = persons.filter((person) =>\r\n    person.name.toLowerCase().includes(newFilter.trim().toLowerCase())\r\n  );\r\n\r\n  return filteredPersons.map((person) => (\r\n    <Person\r\n      key={person.name}\r\n      person={person}\r\n      removeContact={() => removeContact(person)}\r\n    ></Person>\r\n  ));\r\n};\r\n\r\nexport default Persons;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst contacts = { getAll, create, remove, update };\r\nexport default contacts;\r\n","const Notification = ({message, type}) => {\r\n\r\n  if (message === null) return null;\r\n\r\n  return (\r\n    <div className={`notification notification--${type}`}>{message}</div>\r\n  );\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport contacts from './services/contacts';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newFilter, setNewFilter] = useState('');\n  const [newName, setNewName] = useState('');\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [notificationType, setNotificationType] = useState('success');\n\n  useEffect(() => {\n    contacts.getAll().then((contacts) => setPersons(contacts));\n  }, []);\n\n  const handleChangeFilter = (e) => {\n    setNewFilter(e.target.value);\n  };\n\n  const handleChangeName = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleChangePhoneNumber = (e) => {\n    setNewPhoneNumber(e.target.value);\n  };\n\n  const addPerson = (e) => {\n    e.preventDefault();\n\n    const newContact = { name: newName, phoneNumber: newPhoneNumber };\n    const foundCopy = persons.find((person) => person.name === newName);\n\n    if (foundCopy) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, ` +\n            `replace the new number with the new one?`\n        )\n      ) {\n        contacts\n          .update(foundCopy.id, newContact)\n          .then((returnedContact) => {\n            setPersons(\n              persons\n                .filter((person) => person.id !== foundCopy.id)\n                .concat(returnedContact)\n            );\n            setNewPhoneNumber('');\n            setNewName('');\n            setNotificationType('success');\n            setNotificationMessage(`Updated ${newContact.name}`);\n            setTimeout(() => {\n              setNotificationMessage(null);\n            }, 5000);\n          })\n          .catch((err) => {\n            setNotificationType('error');\n            setNotificationMessage(`${err.response.data.error}`);\n            setTimeout(() => {\n              setNotificationMessage(null);\n            }, 5000);\n          });\n      }\n      return;\n    }\n\n    contacts\n      .create(newContact)\n      .then((returnedContact) => {\n        setPersons(persons.concat(returnedContact));\n        setNewPhoneNumber('');\n        setNewName('');\n        setNotificationType('success');\n        setNotificationMessage(`Added ${newContact.name}`);\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n        console.log(newContact);\n      })\n      .catch((err) => {\n        setNotificationType('error');\n        setNotificationMessage(`${err.response.data.error}`);\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n      });\n  };\n\n  const removeContact = (contact) => {\n    if (!window.confirm(`Delete ${contact.name} ?`)) return;\n\n    contacts.remove(contact.id).then(() => console.log('contact deleted'));\n    setPersons(persons.filter((person) => person.id !== contact.id));\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} type={notificationType} />\n      <Filter\n        newFilter={newFilter}\n        handleChangeFilter={handleChangeFilter}\n      ></Filter>\n      <h2>add a new</h2>\n      <PersonForm\n        newName={newName}\n        newPhoneNumber={newPhoneNumber}\n        handleChangeName={handleChangeName}\n        handleChangePhoneNumber={handleChangePhoneNumber}\n        addPerson={addPerson}\n      ></PersonForm>\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        newFilter={newFilter}\n        removeContact={removeContact}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}